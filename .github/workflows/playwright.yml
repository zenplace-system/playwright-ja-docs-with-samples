name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 手動実行用

jobs:
  test:
    name: 'Playwright Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run Playwright tests
        id: playwright
        run: |
          npx playwright test
          echo "status=$?" >> $GITHUB_OUTPUT
          echo "date=$(date)" >> $GITHUB_OUTPUT
        env:
          # 環境変数の設定（必要に応じて）
          CI: true
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
          
      # PRにテスト結果をコメントとして追加
      - name: Add PR Comment
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const testStatus = '${{ steps.playwright.outputs.status }}' === '0' ? '✅ 成功' : '❌ 失敗';
            const reportUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const testDate = '${{ steps.playwright.outputs.date }}';
            
            const testSummary = `## Playwrightテスト結果
            
            **ステータス**: ${testStatus}
            **実行日時**: ${testDate}
            
            [詳細レポートを表示](${reportUrl})
            
            このコメントは自動的に生成されています。`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testSummary
            });
          
      # Slackへの通知（オプション）
      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: 'Playwright Test Results'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # Slack通知を使用しない場合はこのステップをコメントアウト
