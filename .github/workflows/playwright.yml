name: Playwright Tests

on:
  pull_request:
    branches: [master, develop]
  workflow_dispatch: # 手動実行用

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: "Playwright Tests"
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.51.1-noble
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build and start the application
        run: |
          npm run build
          npm run start -- -p 9999 & 
          sleep 30

      - name: Run Playwright tests
        id: playwright
        run: |
          npx playwright test src/app/login/login.spec.ts --project=chromium-headless
          echo "status=$?" >> $GITHUB_OUTPUT
          echo "date=$(date)" >> $GITHUB_OUTPUT
        env:
          CI: true
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:9999

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Add PR Comment
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const testStatus = '${{ steps.playwright.outputs.status }}' === '0' ? '✅ 成功' : '❌ 失敗';
            const reportUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const testDate = '${{ steps.playwright.outputs.date }}';

            const testSummary = `## Playwrightテスト結果

            **ステータス**: ${testStatus}
            **実行日時**: ${testDate}

            [詳細レポートを表示](${reportUrl})

            このコメントは自動的に生成されています。`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testSummary
            });

      # - name: Slack Notification
      #   if: always()
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      #     author_name: "Playwright Test Results"
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}